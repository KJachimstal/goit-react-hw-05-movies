{"version":3,"file":"static/js/597.2b1c1bfa.chunk.js","mappings":"yNA8CA,UA1Ca,WACX,IAAMA,GAASC,EAAAA,EAAAA,MACf,GAAoCC,EAAAA,EAAAA,UAAS,IAA7C,eAAOC,EAAP,KAAmBC,EAAnB,KAgBA,OAdAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAiB,mCAAG,WAAMC,GAAN,gGAECC,EAAAA,EAAAA,kBAAsBD,GAFvB,OAEhBE,EAFgB,OAGtBL,EAAcK,EAASC,KAAKC,MAC5BC,QAAQC,IAAIJ,EAASC,KAAKC,MAJJ,gDAMtBC,QAAQC,IAAR,MANsB,yDAAH,sDAUvBP,EAAkBN,EAAOc,QAC1B,GAAE,CAACd,EAAOc,UAEe,IAAtBX,EAAWY,OAAqB,MAGlC,wBACGZ,EAAWa,KAAI,gBAAGT,EAAH,EAAGA,GAAIU,EAAP,EAAOA,aAAcC,EAArB,EAAqBA,KAAMC,EAA3B,EAA2BA,UAA3B,OACd,gBAAaC,UAAU,aAAvB,UACKH,GACD,gBACEG,UAAU,cACVC,IAAG,yDAAoDJ,GACvDK,IAAI,WAGN,gBAAKF,UAAU,4BARnB,SAUSF,GACP,kBAXF,cAYcC,IAZLZ,EADK,KAkBrB,C,8DC1CKgB,EAAU,mCAEVC,EAAmB,mCAAG,oGACHC,EAAAA,EAAAA,IACrB,6CACA,CACEzB,OAAQ,CACN0B,QAASH,KALW,cACpBd,EADoB,yBASnBA,GATmB,2CAAH,qDAYnBkB,EAAoB,mCAAG,WAAMC,GAAN,uFACJH,EAAAA,EAAAA,IACrB,4CACA,CACEzB,OAAQ,CACN0B,QAASH,EACTM,MAAOD,KANc,cACrBnB,EADqB,yBAUpBA,GAVoB,2CAAH,sDAapBqB,EAAc,mCAAG,WAAMvB,GAAN,uFACEkB,EAAAA,EAAAA,IAAA,6CAAgDlB,GAAM,CAC3EP,OAAQ,CACN0B,QAASH,KAHQ,cACfd,EADe,yBAMdA,GANc,2CAAH,sDASdsB,EAAiB,mCAAG,WAAMxB,GAAN,uFACDkB,EAAAA,EAAAA,IAAA,6CACiBlB,EADjB,YAErB,CACEP,OAAQ,CACN0B,QAASH,KALS,cAClBd,EADkB,yBASjBA,GATiB,2CAAH,sDAYjBH,EAAiB,mCAAG,WAAMC,GAAN,uFACDkB,EAAAA,EAAAA,IAAA,6CACiBlB,EADjB,YAErB,CACEP,OAAQ,CACN0B,QAASH,KALS,cAClBd,EADkB,yBASjBA,GATiB,2CAAH,sDAYjBD,EAAM,CACVgB,oBAAAA,EACAG,qBAAAA,EACAG,eAAAA,EACAC,kBAAAA,EACAzB,kBAAAA,GAGF,K","sources":["components/Cast.jsx","services/api.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport api from '../services/api';\n\nconst Cast = () => {\n  const params = useParams();\n  const [movieCasts, setMovieCasts] = useState([]);\n\n  useEffect(() => {\n    const fetchMovieCredits = async id => {\n      try {\n        const response = await api.fetchMovieCredits(id);\n        setMovieCasts(response.data.cast);\n        console.log(response.data.cast);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n\n    fetchMovieCredits(params.movieId);\n  }, [params.movieId]);\n\n  if (movieCasts.length === 0) return null;\n\n  return (\n    <ul>\n      {movieCasts.map(({ id, profile_path, name, character }) => (\n        <li key={id} className=\"cast__item\">\n          {!!profile_path ? (\n            <img\n              className=\"cast__photo\"\n              src={`https://image.tmdb.org/t/p/w300_and_h450_bestv2${profile_path}`}\n              alt=\"actor\"\n            />\n          ) : (\n            <div className=\"cast__photo-placeholder\"></div>\n          )}\n          Name: {name}\n          <br />\n          Character: {character}\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nexport default Cast;\n","import axios from 'axios';\n\nconst API_KEY = '8645c0fb88a26a8ad33046f58e6535b4';\n\nconst fetchTrendingMovies = async () => {\n  const response = await axios.get(\n    'https://api.themoviedb.org/3/movie/popular',\n    {\n      params: {\n        api_key: API_KEY,\n      },\n    }\n  );\n  return response;\n};\n\nconst fetchMoviesWithQuery = async searchQuery => {\n  const response = await axios.get(\n    'https://api.themoviedb.org/3/search/movie',\n    {\n      params: {\n        api_key: API_KEY,\n        query: searchQuery,\n      },\n    }\n  );\n  return response;\n};\n\nconst fetchMovieById = async id => {\n  const response = await axios.get(`https://api.themoviedb.org/3/movie/${id}`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n  return response;\n};\n\nconst fetchMovieReviews = async id => {\n  const response = await axios.get(\n    `https://api.themoviedb.org/3/movie/${id}/reviews`,\n    {\n      params: {\n        api_key: API_KEY,\n      },\n    }\n  );\n  return response;\n};\n\nconst fetchMovieCredits = async id => {\n  const response = await axios.get(\n    `https://api.themoviedb.org/3/movie/${id}/credits`,\n    {\n      params: {\n        api_key: API_KEY,\n      },\n    }\n  );\n  return response;\n};\n\nconst api = {\n  fetchTrendingMovies,\n  fetchMoviesWithQuery,\n  fetchMovieById,\n  fetchMovieReviews,\n  fetchMovieCredits,\n};\n\nexport default api;\n"],"names":["params","useParams","useState","movieCasts","setMovieCasts","useEffect","fetchMovieCredits","id","api","response","data","cast","console","log","movieId","length","map","profile_path","name","character","className","src","alt","API_KEY","fetchTrendingMovies","axios","api_key","fetchMoviesWithQuery","searchQuery","query","fetchMovieById","fetchMovieReviews"],"sourceRoot":""}