{"version":3,"file":"static/js/681.a5e8bbbc.chunk.js","mappings":"yNAoCA,UAhCgB,WACd,IAAMA,GAASC,EAAAA,EAAAA,MACf,GAAwCC,EAAAA,EAAAA,UAAS,IAAjD,eAAOC,EAAP,KAAqBC,EAArB,KAgBA,OAdAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAiB,mCAAG,WAAMC,GAAN,gGAECC,EAAAA,EAAAA,kBAAsBD,GAFvB,OAEhBE,EAFgB,OAGtBL,EAAgBK,EAASC,KAAKC,SAHR,gDAMtBC,QAAQC,IAAR,MANsB,yDAAH,sDAUvBP,EAAkBN,EAAOc,QAC1B,GAAE,CAACd,EAAOc,UAEiB,IAAxBX,EAAaY,QAAqB,kDAGpC,wBACGZ,EAAaa,KAAI,SAAAC,GAAM,OACtB,2BACE,qCAAaA,EAAOC,WACpB,0BAAOD,EAAOE,YAFPF,EAAOV,GADM,KAQ7B,C","sources":["components/Reviews.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport api from '../services/api';\n\nconst Reviews = () => {\n  const params = useParams();\n  const [movieReviews, setMovieReviews] = useState([]);\n\n  useEffect(() => {\n    const fetchMovieReviews = async id => {\n      try {\n        const response = await api.fetchMovieReviews(id);\n        setMovieReviews(response.data.results);\n        // console.log(response.data.results);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n\n    fetchMovieReviews(params.movieId);\n  }, [params.movieId]);\n\n  if (movieReviews.length === 0) return <h6>There is no reviews.</h6>;\n\n  return (\n    <ul>\n      {movieReviews.map(review => (\n        <li key={review.id}>\n          <h4>Author: {review.author}</h4>\n          <span>{review.content}</span>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nexport default Reviews;\n"],"names":["params","useParams","useState","movieReviews","setMovieReviews","useEffect","fetchMovieReviews","id","api","response","data","results","console","log","movieId","length","map","review","author","content"],"sourceRoot":""}