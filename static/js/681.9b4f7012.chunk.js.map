{"version":3,"file":"static/js/681.9b4f7012.chunk.js","mappings":"yNAoCA,UAhCgB,WACd,IAAMA,GAASC,EAAAA,EAAAA,MACf,GAAwCC,EAAAA,EAAAA,UAAS,IAAjD,eAAOC,EAAP,KAAqBC,EAArB,KAgBA,OAdAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAiB,mCAAG,WAAMC,GAAN,gGAECC,EAAAA,EAAAA,kBAAsBD,GAFvB,OAEhBE,EAFgB,OAGtBL,EAAgBK,EAASC,KAAKC,SAHR,gDAMtBC,QAAQC,IAAR,MANsB,yDAAH,sDAUvBP,EAAkBN,EAAOc,QAC1B,GAAE,CAACd,EAAOc,UAEiB,IAAxBX,EAAaY,QAAqB,kDAGpC,wBACGZ,EAAaa,KAAI,SAAAC,GAAM,OACtB,2BACE,qCAAaA,EAAOC,WACpB,0BAAOD,EAAOE,YAFPF,EAAOV,GADM,KAQ7B,C,8DChCKa,EAAU,mCAEVC,EAAmB,mCAAG,oGACHC,EAAAA,EAAAA,IACrB,6CACA,CACEtB,OAAQ,CACNuB,QAASH,KALW,cACpBX,EADoB,yBASnBA,GATmB,2CAAH,qDAYnBe,EAAoB,mCAAG,WAAMC,GAAN,uFACJH,EAAAA,EAAAA,IACrB,4CACA,CACEtB,OAAQ,CACNuB,QAASH,EACTM,MAAOD,KANc,cACrBhB,EADqB,yBAUpBA,GAVoB,2CAAH,sDAapBkB,EAAc,mCAAG,WAAMpB,GAAN,uFACEe,EAAAA,EAAAA,IAAA,6CAAgDf,GAAM,CAC3EP,OAAQ,CACNuB,QAASH,KAHQ,cACfX,EADe,yBAMdA,GANc,2CAAH,sDASdH,EAAiB,mCAAG,WAAMC,GAAN,uFACDe,EAAAA,EAAAA,IAAA,6CACiBf,EADjB,YAErB,CACEP,OAAQ,CACNuB,QAASH,KALS,cAClBX,EADkB,yBASjBA,GATiB,2CAAH,sDAYjBmB,EAAiB,mCAAG,WAAMrB,GAAN,uFACDe,EAAAA,EAAAA,IAAA,6CACiBf,EADjB,YAErB,CACEP,OAAQ,CACNuB,QAASH,KALS,cAClBX,EADkB,yBASjBA,GATiB,2CAAH,sDAYjBD,EAAM,CACVa,oBAAAA,EACAG,qBAAAA,EACAG,eAAAA,EACArB,kBAAAA,EACAsB,kBAAAA,GAGF,K","sources":["components/Reviews.jsx","services/api.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport api from '../services/api';\n\nconst Reviews = () => {\n  const params = useParams();\n  const [movieReviews, setMovieReviews] = useState([]);\n\n  useEffect(() => {\n    const fetchMovieReviews = async id => {\n      try {\n        const response = await api.fetchMovieReviews(id);\n        setMovieReviews(response.data.results);\n        // console.log(response.data.results);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n\n    fetchMovieReviews(params.movieId);\n  }, [params.movieId]);\n\n  if (movieReviews.length === 0) return <h6>There is no reviews.</h6>;\n\n  return (\n    <ul>\n      {movieReviews.map(review => (\n        <li key={review.id}>\n          <h4>Author: {review.author}</h4>\n          <span>{review.content}</span>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nexport default Reviews;\n","import axios from 'axios';\n\nconst API_KEY = '8645c0fb88a26a8ad33046f58e6535b4';\n\nconst fetchTrendingMovies = async () => {\n  const response = await axios.get(\n    'https://api.themoviedb.org/3/movie/popular',\n    {\n      params: {\n        api_key: API_KEY,\n      },\n    }\n  );\n  return response;\n};\n\nconst fetchMoviesWithQuery = async searchQuery => {\n  const response = await axios.get(\n    'https://api.themoviedb.org/3/search/movie',\n    {\n      params: {\n        api_key: API_KEY,\n        query: searchQuery,\n      },\n    }\n  );\n  return response;\n};\n\nconst fetchMovieById = async id => {\n  const response = await axios.get(`https://api.themoviedb.org/3/movie/${id}`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n  return response;\n};\n\nconst fetchMovieReviews = async id => {\n  const response = await axios.get(\n    `https://api.themoviedb.org/3/movie/${id}/reviews`,\n    {\n      params: {\n        api_key: API_KEY,\n      },\n    }\n  );\n  return response;\n};\n\nconst fetchMovieCredits = async id => {\n  const response = await axios.get(\n    `https://api.themoviedb.org/3/movie/${id}/credits`,\n    {\n      params: {\n        api_key: API_KEY,\n      },\n    }\n  );\n  return response;\n};\n\nconst api = {\n  fetchTrendingMovies,\n  fetchMoviesWithQuery,\n  fetchMovieById,\n  fetchMovieReviews,\n  fetchMovieCredits,\n};\n\nexport default api;\n"],"names":["params","useParams","useState","movieReviews","setMovieReviews","useEffect","fetchMovieReviews","id","api","response","data","results","console","log","movieId","length","map","review","author","content","API_KEY","fetchTrendingMovies","axios","api_key","fetchMoviesWithQuery","searchQuery","query","fetchMovieById","fetchMovieCredits"],"sourceRoot":""}