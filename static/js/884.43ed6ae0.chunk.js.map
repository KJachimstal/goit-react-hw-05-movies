{"version":3,"file":"static/js/884.43ed6ae0.chunk.js","mappings":"iOAgEA,UA1DqB,WAAO,IAAD,IACjBA,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA0BE,EAAAA,EAAAA,UAAS,MAAnC,eAAOC,EAAP,KAAcC,EAAd,KAEMC,EAAY,qBADDC,EAAAA,EAAAA,MACaC,aAAZ,aAAG,EAAgBC,YAAnB,QAA2B,IAgB7C,OAdAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAc,mCAAG,WAAMV,GAAN,gGAEIW,EAAAA,EAAAA,eAAmBX,GAFvB,OAEbY,EAFa,OAGnBR,EAASQ,EAASC,MAHC,gDAMnBC,QAAQC,IAAR,MANmB,yDAAH,sDAUpBL,EAAeV,EAChB,GAAE,CAACA,IAECG,GAGH,iBAAKa,UAAU,mBAAf,WACE,SAAC,KAAD,CAAMC,GAAIZ,EAAV,mBACA,iBAAKW,UAAU,iBAAf,WACE,gBACEA,UAAU,eACVE,IAAG,yDAAoDf,EAAMgB,aAC7DC,IAAI,kBAEN,iBAAKJ,UAAU,cAAf,WACE,eAAIA,UAAU,eAAd,SAA8Bb,EAAMkB,QADtC,eAEelB,EAAMmB,aAFrB,KAEmC,qCAFnC,IAEsDnB,EAAMoB,UAC1D,mCACCpB,EAAMqB,OAAOC,KAAI,SAAAC,GAAK,OACrB,4BAAsBA,EAAMC,KAA5B,MAAWD,EAAME,GADI,WAK3B,eAAIZ,UAAU,aACd,oDACA,2BACE,yBACE,SAAC,KAAD,CAAMC,GAAG,OAAT,qBAEF,yBACE,SAAC,KAAD,CAAMA,GAAG,UAAT,2BAGJ,eAAID,UAAU,aACd,SAAC,EAAAa,SAAD,CAAUC,UAAU,wCAApB,UACE,SAAC,KAAD,SAhCa,IAoCpB,C,8DC5DKC,EAAU,mCAEVC,EAAmB,mCAAG,oGACHC,EAAAA,EAAAA,IACrB,6CACA,CACEC,OAAQ,CACNC,QAASJ,KALW,cACpBnB,EADoB,yBASnBA,GATmB,2CAAH,qDAYnBwB,EAAoB,mCAAG,WAAMC,GAAN,uFACJJ,EAAAA,EAAAA,IACrB,4CACA,CACEC,OAAQ,CACNC,QAASJ,EACTO,MAAOD,KANc,cACrBzB,EADqB,yBAUpBA,GAVoB,2CAAH,sDAapBF,EAAc,mCAAG,WAAMkB,GAAN,uFACEK,EAAAA,EAAAA,IAAA,6CAAgDL,GAAM,CAC3EM,OAAQ,CACNC,QAASJ,KAHQ,cACfnB,EADe,yBAMdA,GANc,2CAAH,sDASd2B,EAAiB,mCAAG,WAAMX,GAAN,uFACDK,EAAAA,EAAAA,IAAA,6CACiBL,EADjB,YAErB,CACEM,OAAQ,CACNC,QAASJ,KALS,cAClBnB,EADkB,yBASjBA,GATiB,2CAAH,sDAYjB4B,EAAiB,mCAAG,WAAMZ,GAAN,uFACDK,EAAAA,EAAAA,IAAA,6CACiBL,EADjB,YAErB,CACEM,OAAQ,CACNC,QAASJ,KALS,cAClBnB,EADkB,yBASjBA,GATiB,2CAAH,sDAYjBD,EAAM,CACVqB,oBAAAA,EACAI,qBAAAA,EACA1B,eAAAA,EACA6B,kBAAAA,EACAC,kBAAAA,GAGF,K","sources":["pages/MovieDetails.jsx","services/api.js"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { useLocation, useParams } from 'react-router-dom';\nimport api from '../services/api';\nimport { Link, Outlet } from 'react-router-dom';\nimport { Suspense } from 'react';\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  const [movie, setMovie] = useState(null);\n  const location = useLocation();\n  const backLinkHref = location.state?.from ?? '/';\n\n  useEffect(() => {\n    const fetchMovieById = async movieId => {\n      try {\n        const response = await api.fetchMovieById(movieId);\n        setMovie(response.data);\n        // console.log(response.data);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n\n    fetchMovieById(movieId);\n  }, [movieId]);\n\n  if (!movie) return null;\n\n  return (\n    <div className=\"movie__container\">\n      <Link to={backLinkHref}>Back</Link>\n      <div className=\"movie__general\">\n        <img\n          className=\"movie__image\"\n          src={`https://image.tmdb.org/t/p/w300_and_h450_bestv2${movie.poster_path}`}\n          alt=\"Movie poster\"\n        />\n        <div className=\"movie__info\">\n          <h3 className=\"movie__title\">{movie.title}</h3>\n          User Score: {movie.vote_average}%<h5>Overview</h5> {movie.overview}\n          <h5>Genres</h5>\n          {movie.genres.map(genre => (\n            <span key={genre.id}>{genre.name} </span>\n          ))}\n        </div>\n      </div>\n      <hr className=\"divider\" />\n      <h5>Additional information</h5>\n      <ul>\n        <li>\n          <Link to=\"cast\">Cast</Link>\n        </li>\n        <li>\n          <Link to=\"reviews\">Reviews</Link>\n        </li>\n      </ul>\n      <hr className=\"divider\" />\n      <Suspense fallback={<div>Loading...</div>}>\n        <Outlet />\n      </Suspense>\n    </div>\n  );\n};\n\nexport default MovieDetails;\n","import axios from 'axios';\n\nconst API_KEY = '8645c0fb88a26a8ad33046f58e6535b4';\n\nconst fetchTrendingMovies = async () => {\n  const response = await axios.get(\n    'https://api.themoviedb.org/3/movie/popular',\n    {\n      params: {\n        api_key: API_KEY,\n      },\n    }\n  );\n  return response;\n};\n\nconst fetchMoviesWithQuery = async searchQuery => {\n  const response = await axios.get(\n    'https://api.themoviedb.org/3/search/movie',\n    {\n      params: {\n        api_key: API_KEY,\n        query: searchQuery,\n      },\n    }\n  );\n  return response;\n};\n\nconst fetchMovieById = async id => {\n  const response = await axios.get(`https://api.themoviedb.org/3/movie/${id}`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n  return response;\n};\n\nconst fetchMovieReviews = async id => {\n  const response = await axios.get(\n    `https://api.themoviedb.org/3/movie/${id}/reviews`,\n    {\n      params: {\n        api_key: API_KEY,\n      },\n    }\n  );\n  return response;\n};\n\nconst fetchMovieCredits = async id => {\n  const response = await axios.get(\n    `https://api.themoviedb.org/3/movie/${id}/credits`,\n    {\n      params: {\n        api_key: API_KEY,\n      },\n    }\n  );\n  return response;\n};\n\nconst api = {\n  fetchTrendingMovies,\n  fetchMoviesWithQuery,\n  fetchMovieById,\n  fetchMovieReviews,\n  fetchMovieCredits,\n};\n\nexport default api;\n"],"names":["movieId","useParams","useState","movie","setMovie","backLinkHref","useLocation","state","from","useEffect","fetchMovieById","api","response","data","console","log","className","to","src","poster_path","alt","title","vote_average","overview","genres","map","genre","name","id","Suspense","fallback","API_KEY","fetchTrendingMovies","axios","params","api_key","fetchMoviesWithQuery","searchQuery","query","fetchMovieReviews","fetchMovieCredits"],"sourceRoot":""}