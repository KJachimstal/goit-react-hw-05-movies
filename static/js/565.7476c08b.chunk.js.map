{"version":3,"file":"static/js/565.7476c08b.chunk.js","mappings":"oKAkBA,IAhBmB,SAAAA,GACjB,IAAMC,GAAWC,EAAAA,EAAAA,MAEjB,OACE,8BACGF,EAAMG,WAAWC,KAAI,SAAAC,GAAK,OACzB,eAAIC,UAAU,aAAd,UACE,SAAC,KAAD,CAAMC,GAAE,kBAAaF,EAAMG,IAAMC,MAAO,CAAEC,KAAMT,GAAhD,SACGI,EAAMM,SAFqBN,EAAMG,GADb,KAShC,C,iHCyCD,UApDe,SAAAR,GAAU,IAAD,EACtB,GAA4BY,EAAAA,EAAAA,YAA5B,eAAOC,EAAP,KAAeC,EAAf,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAK,UAAGF,EAAaG,IAAI,gBAApB,QAAgC,IAQ3CC,EAAAA,EAAAA,YAAU,WACR,GAAc,KAAVF,EAAJ,CACA,IAAMG,EAAoB,mCAAG,WAAMC,GAAN,gGAEFC,EAAAA,EAAAA,qBAAyBL,GAFvB,OAEnBM,EAFmB,OAIzBV,EAAUU,EAASC,KAAKC,SAJC,gDAMzBC,QAAQC,IAAR,MANyB,yDAAH,sDAU1BP,EAAqBH,EAXG,CAYzB,GAAE,CAACA,IAQJ,OACE,4BACE,kBAAMZ,UAAU,cAAcuB,SARb,SAAAP,GACnBA,EAAMQ,iBACN,IAAMC,EAAOT,EAAMU,cACnBf,EAAgB,CAAEC,MAAOa,EAAKE,SAASf,MAAMgB,OAC9C,EAIG,WACE,kBACE5B,UAAU,qBACV6B,KAAK,OACLC,KAAK,QACLC,YAAY,gBACZH,MAAOhB,EACPoB,SAAU,SAAAhB,GAAK,OAAIL,EAAgB,CAAEC,MAAOI,EAAMiB,OAAOL,OAA1C,KAEjB,mBAAQ5B,UAAU,sBAAsB6B,KAAK,SAA7C,uBAtCkB,SAAAtB,GACtB,GAAc,MAAVA,EACF,OAAO,SAAC,IAAD,CAAYV,WAAYU,GAElC,CAsCI2B,CAAgB3B,KAGtB,C,8DCrDK4B,EAAU,mCAEVC,EAAmB,mCAAG,oGACHC,EAAAA,EAAAA,IACrB,6CACA,CACEC,OAAQ,CACNC,QAASJ,KALW,cACpBjB,EADoB,yBASnBA,GATmB,2CAAH,qDAYnBH,EAAoB,mCAAG,WAAMyB,GAAN,uFACJH,EAAAA,EAAAA,IACrB,4CACA,CACEC,OAAQ,CACNC,QAASJ,EACTvB,MAAO4B,KANc,cACrBtB,EADqB,yBAUpBA,GAVoB,2CAAH,sDAapBuB,EAAc,mCAAG,WAAMvC,GAAN,uFACEmC,EAAAA,EAAAA,IAAA,6CAAgDnC,GAAM,CAC3EoC,OAAQ,CACNC,QAASJ,KAHQ,cACfjB,EADe,yBAMdA,GANc,2CAAH,sDASdwB,EAAiB,mCAAG,WAAMxC,GAAN,uFACDmC,EAAAA,EAAAA,IAAA,6CACiBnC,EADjB,YAErB,CACEoC,OAAQ,CACNC,QAASJ,KALS,cAClBjB,EADkB,yBASjBA,GATiB,2CAAH,sDAYjByB,EAAiB,mCAAG,WAAMzC,GAAN,uFACDmC,EAAAA,EAAAA,IAAA,6CACiBnC,EADjB,YAErB,CACEoC,OAAQ,CACNC,QAASJ,KALS,cAClBjB,EADkB,yBASjBA,GATiB,2CAAH,sDAYjBD,EAAM,CACVmB,oBAAAA,EACArB,qBAAAA,EACA0B,eAAAA,EACAC,kBAAAA,EACAC,kBAAAA,GAGF,K","sources":["components/MoviesList.jsx","pages/Search.jsx","services/api.js"],"sourcesContent":["import { Link, useLocation } from 'react-router-dom';\n\nconst MoviesList = props => {\n  const location = useLocation();\n\n  return (\n    <>\n      {props.moviesList.map(movie => (\n        <li className=\"movie-list\" key={movie.id}>\n          <Link to={`/movies/${movie.id}`} state={{ from: location }}>\n            {movie.title}\n          </Link>\n        </li>\n      ))}\n    </>\n  );\n};\n\nexport default MoviesList;\n","import MoviesList from 'components/MoviesList';\nimport { useSearchParams } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport api from '../services/api';\n\nconst Search = props => {\n  const [movies, setMovies] = useState();\n  const [searchParams, setSearchParams] = useSearchParams();\n  const query = searchParams.get('query') ?? '';\n\n  const renderMovieList = movies => {\n    if (movies != null) {\n      return <MoviesList moviesList={movies} />;\n    }\n  };\n\n  useEffect(() => {\n    if (query === '') return;\n    const fetchMoviesWithQuery = async event => {\n      try {\n        const response = await api.fetchMoviesWithQuery(query);\n        // console.log(response.data);\n        setMovies(response.data.results);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n\n    fetchMoviesWithQuery(query);\n  }, [query]);\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    const form = event.currentTarget;\n    setSearchParams({ query: form.elements.query.value });\n  };\n\n  return (\n    <div>\n      <form className=\"search-form\" onSubmit={handleSubmit}>\n        <input\n          className=\"search-form__input\"\n          type=\"text\"\n          name=\"query\"\n          placeholder=\"Search movies\"\n          value={query}\n          onChange={event => setSearchParams({ query: event.target.value })}\n        />\n        <button className=\"search-form__button\" type=\"submit\">\n          Search\n        </button>\n      </form>\n      {renderMovieList(movies)}\n    </div>\n  );\n};\n\nexport default Search;\n","import axios from 'axios';\n\nconst API_KEY = '8645c0fb88a26a8ad33046f58e6535b4';\n\nconst fetchTrendingMovies = async () => {\n  const response = await axios.get(\n    'https://api.themoviedb.org/3/movie/popular',\n    {\n      params: {\n        api_key: API_KEY,\n      },\n    }\n  );\n  return response;\n};\n\nconst fetchMoviesWithQuery = async searchQuery => {\n  const response = await axios.get(\n    'https://api.themoviedb.org/3/search/movie',\n    {\n      params: {\n        api_key: API_KEY,\n        query: searchQuery,\n      },\n    }\n  );\n  return response;\n};\n\nconst fetchMovieById = async id => {\n  const response = await axios.get(`https://api.themoviedb.org/3/movie/${id}`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n  return response;\n};\n\nconst fetchMovieReviews = async id => {\n  const response = await axios.get(\n    `https://api.themoviedb.org/3/movie/${id}/reviews`,\n    {\n      params: {\n        api_key: API_KEY,\n      },\n    }\n  );\n  return response;\n};\n\nconst fetchMovieCredits = async id => {\n  const response = await axios.get(\n    `https://api.themoviedb.org/3/movie/${id}/credits`,\n    {\n      params: {\n        api_key: API_KEY,\n      },\n    }\n  );\n  return response;\n};\n\nconst api = {\n  fetchTrendingMovies,\n  fetchMoviesWithQuery,\n  fetchMovieById,\n  fetchMovieReviews,\n  fetchMovieCredits,\n};\n\nexport default api;\n"],"names":["props","location","useLocation","moviesList","map","movie","className","to","id","state","from","title","useState","movies","setMovies","useSearchParams","searchParams","setSearchParams","query","get","useEffect","fetchMoviesWithQuery","event","api","response","data","results","console","log","onSubmit","preventDefault","form","currentTarget","elements","value","type","name","placeholder","onChange","target","renderMovieList","API_KEY","fetchTrendingMovies","axios","params","api_key","searchQuery","fetchMovieById","fetchMovieReviews","fetchMovieCredits"],"sourceRoot":""}